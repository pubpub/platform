---
import { expect } from "utils/assert";

import Layout from "../../layouts/Layout.astro";
import { getClient } from "../../lib/client/client";
import { getJournal, getJournalArticles } from "../../lib/client/queries";
import { getFieldValue } from "../../lib/getValue";

const { slug } = Astro.params;

export async function getStaticPaths() {
	const [journalArticles, journal] = await Promise.all([
		getJournalArticles(),
		getJournal({ depth: 1, withRelatedPubs: false }),
	]);

	const paths = journalArticles.map((pub) => ({
		params: {
			slug: expect(pub.values?.find((value) => value.fieldName === "Slug")?.value),
		},
		props: { pub, journal },
	}));

	return paths;
}

const { pub, journal } = Astro.props;

const title = getFieldValue<string>(pub, "Title");
const abstract = getFieldValue<string>(pub, "Abstract");
const publicationDate = getFieldValue<string>(pub, "Publication Date");
const lastEdited = getFieldValue<string>(pub, "Last Edited");
const doi = getFieldValue<string>(pub, "DOI");
const volume = getFieldValue<string>(pub, "Issue Volume");
const issueNumber = getFieldValue<string>(pub, "Issue Number");
const content = getFieldValue<string>(pub, "PubContent");

// Assuming contributors are in the values array
const contributors = pub.values?.filter((value) => value.fieldName === "Contributors") || [];

// Calculate months since last update
const getMonthsAgo = (dateString: string) => {
	if (!dateString) return "";
	const lastEditDate = new Date(dateString);
	const now = new Date();
	const months =
		(now.getFullYear() - lastEditDate.getFullYear()) * 12 +
		now.getMonth() -
		lastEditDate.getMonth();
	return `${months} months ago`;
};
---

<Layout journal={journal} title={title}>
	<div class="bg-gradient-to-br from-indigo-500 via-purple-500 to-blue-500 min-h-screen">
		<div class="container mx-auto px-4 py-8">
			<div class="flex items-center mb-4">
				<button
					class="bg-white text-gray-800 px-3 py-1 rounded-md flex items-center text-sm mr-2"
				>
					<span>Volume {volume || "4"} Issue {issueNumber || "2"}</span>
				</button>
				<span class="text-white mr-2">Empirical</span>
				<span class="text-white"
					>Published on {
						publicationDate
							? new Date(publicationDate).toLocaleDateString("en-US", {
									month: "short",
									day: "numeric",
									year: "numeric",
								})
							: "Nov 16, 2024"
					}</span
				>
				<button class="ml-auto bg-white text-gray-800 px-3 py-1 rounded-md text-sm">
					SHOW DETAILS
				</button>
			</div>

			<div class="flex flex-col lg:flex-row">
				<div class="lg:w-3/4 bg-white p-8 rounded-lg shadow-lg">
					<h1 class="text-4xl font-bold mb-6">{title}</h1>

					<div class="mb-6">
						<p class="text-gray-800">
							by {
								contributors.map((c) => c.value).join(" and ") ||
									"Helge Giese and Laura M König"
							}
						</p>
					</div>

					<div class="flex items-center text-sm text-gray-600 mb-8">
						<div class="mr-6">
							<p>
								Published on {
									publicationDate
										? new Date(publicationDate).toLocaleDateString("en-US", {
												month: "short",
												day: "numeric",
												year: "numeric",
											})
										: "Nov 16, 2024"
								}
							</p>
						</div>
						<div class="flex items-center">
							<span>last released</span>
							<span class="ml-2">{getMonthsAgo(lastEdited) || "5 months ago"}</span>
						</div>
					</div>

					<div class="mb-8">
						<h2 class="text-2xl font-bold mb-4">ABSTRACT</h2>
						<div class="prose prose-zinc max-w-none">
							{abstract ? <div set:html={abstract} /> : null}
						</div>
					</div>

					<div class="mb-8">
						<div class="prose max-w-none prose-zinc">
							{content ? <div set:html={content} /> : ""}
						</div>
					</div>
				</div>

				<div class="lg:w-1/4 pl-0 lg:pl-4 mt-4 lg:mt-0">
					<div class="mb-2">
						<button
							class="w-full bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 rounded shadow flex justify-between items-center"
						>
							<span>CITE</span>
							<span>[+]</span>
						</button>
					</div>

					<div class="mb-2">
						<button
							class="w-full bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 rounded shadow flex justify-between items-center"
						>
							<span>SOCIAL</span>
							<span class="text-lg">↗</span>
						</button>
					</div>

					<div class="mb-2">
						<button
							class="w-full bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 rounded shadow flex justify-between items-center"
						>
							<span>DOWNLOAD</span>
							<span class="text-lg">↓</span>
						</button>
					</div>

					<div class="mb-2">
						<button
							class="w-full bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 rounded shadow flex justify-between items-center"
						>
							<span>CONTENTS</span>
							<span class="text-lg">☰</span>
						</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</Layout>
