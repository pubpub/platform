{
	"name": "core",
	"type": "module",
	"version": "0.0.0",
	"private": true,
	"scripts": {
		"playwright:test:base": "SKIP_VALIDATION=true NODE_OPTIONS='--import #register-loader' dotenv -e .env.local -e .env.development playwright test",
		"playwright:test": "TEST_IGNORE=' ' pnpm playwright:test:base playwright/_first_tests/initialUser.spec.ts && TEST_IGNORE='**/initialUser.spec.ts' pnpm playwright:test:base",
		"playwright:ui": "dotenv SKIP_VALIDATION=true NODE_OPTIONS='--import #register-loader'  playwright test --ui",
		"db:migrate-dev": "pnpm migrate-dev",
		"db:migrate-deploy": "pnpm migrate-deploy",
		"db:migrate-diff": "pnpm migrate-diff",
		"db:migrate-docker": "pnpm migrate-docker",
		"db:prisma": "pnpm prisma",
		"db:studio": "pnpm prisma studio",
		"db:generate-history-table": "pnpm exec tsx prisma/scripts/history-tables/generate-history-table.mts",
		"db:reset": "pnpm reset-base && pnpm clear-cache",
		"db:reset-no-seed": "SKIP_SEED=true pnpm reset-base && pnpm clear-cache",
		"capabilities:sync": "dotenv -e .env.local -e .env.development tsx prisma/scripts/sync-capabilities.ts sync",
		"capabilities:validate": "dotenv -e .env.local -e .env.development tsx prisma/scripts/sync-capabilities.ts validate",
		"capabilities:validate-enum": "dotenv -e .env.local -e .env.development tsx prisma/scripts/sync-capabilities.ts validate-enum",
		"capabilities:dry-run": "dotenv -e .env.local -e .env.development tsx prisma/scripts/sync-capabilities.ts dry-run",
		"capabilities:generate-migration": "dotenv -e .env.local -e .env.development tsx prisma/scripts/sync-capabilities.ts generate-migration",
		"capabilities:print-migration": "dotenv -e .env.local -e .env.development tsx prisma/scripts/sync-capabilities.ts print-migration",
		"clear-cache": "echo 'FLUSHALL' | nc $(dotenv -e .env.local -e .env.development -p VALKEY_HOST) 6379",
		"dev": "NODE_OPTIONS=\"--max-old-space-size=16384\" next dev -p 3000 --turbo | pino-pretty",
		"build": "SKIP_VALIDATION=true NODE_OPTIONS=\"--max-old-space-size=8192\" next build",
		"build:turbo": "SKIP_VALIDATION=true NODE_OPTIONS=\"--max-old-space-size=8192\" next build --turbo",
		"invite-users": "dotenv -e .env.local -e .env.development  tsx scripts/invite.ts",
		"load-test": "dotenv -e .env.local -e .env.development artillery run load-test.yaml",
		"lint": "eslint",
		"lint:fix": "eslint --fix",
		"migrate-dev": "dotenv -e .env.local -e .env.development prisma migrate dev && pnpm --filter db make-kysely-types",
		"migrate-deploy": "dotenv -e .env.local -e .env.development prisma migrate deploy",
		"migrate-diff": "dotenv -e .env.local -e .env.development prisma migrate diff",
		"migrate-docker": "dotenv -e .env.docker -- prisma migrate deploy",
		"prisma": "dotenv -e .env.local -e .env.development prisma",
		"prisma-studio": "dotenv -e .env.local -e .env.development prisma studio",
		"format": "prettier --check . --ignore-path ../.gitignore --ignore-path ./.gitignore --ignore-path ./.prettierignore",
		"format:fix": "prettier -w . --ignore-path ../.gitignore --ignore-path ./.gitignore --ignore-path ./.prettierignore",
		"start": "next start",
		"start:dev": "dotenv -e .env.local -e .env.development pnpm start | pino-pretty",
		"reset-base": "dotenv -e .env.local -e .env.development prisma migrate reset -- --preview-feature --force | pino-pretty",
		"reset": "pnpm reset-base && pnpm clear-cache",
		"test": "SKIP_VALIDATION=true vitest --logHeapUsage",
		"test-run": "SKIP_VALIDATION=true vitest run --logHeapUsage",
		"test-run-with-jobs": "pnpm exec concurrently \"pnpm --filter jobs dev\" \"pnpm --filter core test-run\" --success=first -k",
		"type-check": "tsc --noEmit",
		"type-check-watch": "tsc --watch",
		"start-standalone": "node server.js",
		"storybook": "SKIP_VALIDATION=true PUBPUB_URL=http://localhost:6006 storybook dev -p 6006 --no-open",
		"build-storybook": "SKIP_VALIDATION=true storybook build"
	},
	"files": [
		".next",
		"public"
	],
	"prisma": {
		"__comment": "The #register-loader goes to the correct file based on the .imports setting below",
		"seed": "tsx --import #register-loader prisma/seed.ts"
	},
	"dependencies": {
		"@aws-sdk/client-s3": "^3.864.0",
		"@aws-sdk/lib-storage": "^3.864.0",
		"@aws-sdk/s3-request-presigner": "^3.864.0",
		"@dagrejs/dagre": "^1.1.5",
		"@dnd-kit/core": "^6.3.1",
		"@dnd-kit/modifiers": "^7.0.0",
		"@dnd-kit/sortable": "^8.0.0",
		"@dnd-kit/utilities": "^3.2.2",
		"@faker-js/faker": "^9.9.0",
		"@fortedigital/nextjs-cache-handler": "1.2.0",
		"@googleapis/drive": "^8.16.0",
		"@handlewithcare/react-prosemirror": "catalog:",
		"@honeycombio/opentelemetry-node": "catalog:",
		"@hookform/resolvers": "catalog:",
		"@icons-pack/react-simple-icons": "^10.2.0",
		"@neshca/cache-handler": "^1.9.0",
		"@nimpl/getters": "^2.2.0",
		"@node-rs/argon2": "^1.8.3",
		"@opentelemetry/auto-instrumentations-node": "catalog:",
		"@prisma/client": "5.19.1",
		"@react-email/render": "^1.2.0",
		"@sentry/nextjs": "catalog:",
		"@sinclair/typebox": "catalog:",
		"@t3-oss/env-nextjs": "^0.11.1",
		"@tanstack/react-query": "^5.85.5",
		"@tanstack/react-table": "^8.21.3",
		"@ts-rest/core": "catalog:",
		"@ts-rest/next": "catalog:",
		"@ts-rest/open-api": "catalog:",
		"@ts-rest/react-query": "catalog:",
		"@ts-rest/serverless": "catalog:",
		"@types/hast": "^3.0.4",
		"ajv": "^8.17.1",
		"ajv-formats": "^2.1.1",
		"clsx": "catalog:",
		"context-editor": "workspace:*",
		"contracts": "workspace:*",
		"date-fns": "catalog:",
		"db": "workspace:*",
		"debounce": "^2.2.0",
		"diacritics": "^1.3.0",
		"emails": "workspace:*",
		"eta": "^3.5.0",
		"google-auth-library": "^9.15.1",
		"graphile-worker": "^0.16.6",
		"hastscript": "^9.0.1",
		"import-in-the-middle": "1.14.2",
		"ioredis": "^5.7.0",
		"jsonpath-plus": "^10.3.0",
		"jsonwebtoken": "^9.0.2",
		"katex": "catalog:",
		"kysely": "^0.27.6",
		"lodash.isequalwith": "^4.4.0",
		"lodash.partition": "^4.6.0",
		"logger": "workspace:*",
		"lucia": "^3.2.2",
		"lucide-react": "^0.469.0",
		"micromark-extension-directive": "^3.0.2",
		"mudder": "^2.1.1",
		"next": "catalog:",
		"next-connect": "^1.0.0",
		"nodemailer": "^6.10.1",
		"nuqs": "catalog:",
		"openapi3-ts": "^4.5.0",
		"oslo": "^1.2.1",
		"parse-english": "^7.0.0",
		"p-map": "^7.0.3",
		"pg": "^8.16.3",
		"prosemirror-markdown": "^1.13.2",
		"prosemirror-model": "catalog:",
		"qs": "^6.14.0",
		"react": "catalog:react19",
		"react-dom": "catalog:react19",
		"react-hook-form": "catalog:",
		"react-markdown": "^9.1.0",
		"reactflow": "^11.11.4",
		"rehype": "^13.0.2",
		"rehype-format": "^5.0.1",
		"rehype-parse": "^9.0.1",
		"rehype-remark": "^10.0.1",
		"rehype-retext": "^5.0.1",
		"rehype-stringify": "^10.0.1",
		"remark-directive": "^3.0.1",
		"remark-parse": "^11.0.0",
		"remark-rehype": "^11.1.2",
		"remark-stringify": "^11.0.0",
		"remove": "^0.1.5",
		"require-in-the-middle": "^7.5.2",
		"retext-stringify": "^4.0.0",
		"schemas": "workspace:*",
		"server-only": "^0.0.1",
		"tailwind-merge": "catalog:",
		"ui": "workspace:*",
		"unified": "^11.0.5",
		"unist-util-filter": "^5.0.1",
		"unist-util-visit": "^5.0.0",
		"use-debounce": "^10.0.5",
		"use-next-sse": "^0.2.3",
		"utils": "workspace:*",
		"uuid": "^9.0.1",
		"zod": "catalog:"
	},
	"devDependencies": {
		"@chromatic-com/storybook": "^4.1.1",
		"@hookform/devtools": "^4.4.0",
		"@playwright/test": "catalog:",
		"@preconstruct/next": "^4.0.0",
		"@prisma/generator-helper": "^5.22.0",
		"@prisma/internals": "^5.22.0",
		"@pubpub/eslint-config": "workspace:*",
		"@pubpub/prettier-config": "workspace:*",
		"@storybook/addon-docs": "^9.1.2",
		"@storybook/addon-onboarding": "^9.1.2",
		"@storybook/addon-vitest": "9.0.8",
		"@storybook/nextjs-vite": "^9.1.2",
		"@tailwindcss/forms": "^0.5.10",
		"@tanstack/react-query-devtools": "^5.85.5",
		"@testing-library/jest-dom": "^6.7.0",
		"@testing-library/react": "^16.3.0",
		"@testing-library/user-event": "^14.6.1",
		"@types/diacritics": "^1.3.3",
		"@types/jsdom": "^21.1.7",
		"@types/jsonwebtoken": "^9.0.10",
		"@types/lodash.isequalwith": "^4.4.9",
		"@types/lodash.partition": "^4.6.9",
		"@types/mdast": "^4.0.4",
		"@types/mudder": "^2.1.3",
		"@types/node": "catalog:",
		"@types/nodemailer": "^6.4.18",
		"@types/pg": "^8.15.5",
		"@types/pluralize": "^0.0.33",
		"@types/qs": "^6.14.0",
		"@types/react": "catalog:react19",
		"@types/react-dom": "catalog:react19",
		"@types/unist": "^3.0.3",
		"@types/uuid": "^9.0.8",
		"@vitejs/plugin-react": "catalog:",
		"@vitest/browser": "3.0.5",
		"@vitest/coverage-v8": "3.0.5",
		"@vitest/utils": "^3.2.4",
		"autoprefixer": "catalog:",
		"csv-parse": "^5.6.0",
		"dotenv": "^16.6.1",
		"dotenv-cli": "^7.4.4",
		"jsdom": "^25.0.1",
		"kanel": "^3.14.4",
		"kanel-kysely": "^0.4.0",
		"pluralize": "^8.0.0",
		"postcss": "catalog:",
		"prisma": "^5.22.0",
		"prisma-dbml-generator": "^0.12.0",
		"react": "catalog:react19",
		"react-dom": "catalog:react19",
		"storybook": "^9.1.2",
		"styled-jsx": "^5.1.7",
		"tailwindcss": "catalog:",
		"ts-node": "^10.9.2",
		"tsconfig": "workspace:*",
		"tsx": "catalog:",
		"typescript": "catalog:",
		"vite": "catalog:",
		"vite-tsconfig-paths": "catalog:",
		"vitest": "catalog:",
		"yargs": "^17.7.2"
	},
	"prettier": "@pubpub/prettier-config",
	"imports": {
		"#register-loader": "./prisma/seed/stubs/register-loader.js"
	}
}
