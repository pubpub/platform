import type { ColumnType, Insertable, Selectable, Updateable } from "kysely";

import { z } from "zod";

import type { FormsId } from "./Forms";
import type { StagesId } from "./Stages";
import { formsIdSchema } from "./Forms";
import { stagesIdSchema } from "./Stages";

// @generated
// This file is automatically generated by Kanel. Do not modify manually.

/** Identifier type for public.form_buttons */
export type FormButtonsId = string & { __brand: "FormButtonsId" };

/** Represents the table public.form_buttons */
export interface FormButtonsTable {
	id: ColumnType<FormButtonsId, FormButtonsId | undefined, FormButtonsId>;

	formId: ColumnType<FormsId, FormsId, FormsId>;

	rank: ColumnType<string, string, string>;

	label: ColumnType<string | null, string | null, string | null>;

	stageId: ColumnType<StagesId | null, StagesId | null, StagesId | null>;

	createdAt: ColumnType<Date, Date | string | undefined, Date | string>;

	updatedAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type FormButtons = Selectable<FormButtonsTable>;

export type NewFormButtons = Insertable<FormButtonsTable>;

export type FormButtonsUpdate = Updateable<FormButtonsTable>;

export const formButtonsIdSchema = z.string().uuid() as unknown as z.Schema<FormButtonsId>;

export const formButtonsSchema = z.object({
	id: formButtonsIdSchema,
	formId: formsIdSchema,
	rank: z.string(),
	label: z.string().nullable(),
	stageId: stagesIdSchema.nullable(),
	createdAt: z.date(),
	updatedAt: z.date(),
});

export const formButtonsInitializerSchema = z.object({
	id: formButtonsIdSchema.optional(),
	formId: formsIdSchema,
	rank: z.string(),
	label: z.string().optional().nullable(),
	stageId: stagesIdSchema.optional().nullable(),
	createdAt: z.date().optional(),
	updatedAt: z.date().optional(),
});

export const formButtonsMutatorSchema = z.object({
	id: formButtonsIdSchema.optional(),
	formId: formsIdSchema.optional(),
	rank: z.string().optional(),
	label: z.string().optional().nullable(),
	stageId: stagesIdSchema.optional().nullable(),
	createdAt: z.date().optional(),
	updatedAt: z.date().optional(),
});
