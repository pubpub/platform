# Based on https://docs.github.com/en/actions/deployment/deploying-to-your-cloud-provider/deploying-to-amazon-elastic-container-service

name: Promote from main

on:
    push:
        branches:
            - main

jobs:
    ci:
        uses: ./.github/workflows/ci.yml

    build-all:
        needs: ci
        uses: ./.github/workflows/ecrbuild-all.yml
        secrets:
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

    run-e2e:
        needs:
            - ci
            - build-all
        uses: ./.github/workflows/e2e.yml
        secrets:
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

    deploy-all:
        uses: ./.github/workflows/awsdeploy.yml
        needs:
            - build-all
            - run-e2e
        with:
            proper-name: stevie
            environment: production
        secrets:
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

    publish-to-ghcr:
        needs:
            - deploy-all
            - build-all
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
        steps:
            - name: Set timestamp
              id: timestamp
              run: echo "TIMESTAMP=$(date +%Y%m%d%H%M)" >> $GITHUB_OUTPUT

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Login to Amazon ECR
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ vars.IAM_ROLE_TO_ASSUME }}
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: ECR login
              uses: aws-actions/amazon-ecr-login@v2
              id: ecr-login

            - name: Push to GHCR
              env:
                  ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
              run: |
                  # Get current timestamp for tags
                  TIMESTAMP=$(date +%Y%m%d-%H%M%S)

                  # Core
                  docker pull ${{ needs.build-all.outputs.core-image }}
                  docker tag ${{ needs.build-all.outputs.core-image }} ghcr.io/pubpub/platform:${{ steps.timestamp.outputs.TIMESTAMP }}
                  docker tag ${{ needs.build-all.outputs.core-image }} ghcr.io/pubpub/platform:latest
                  docker push ghcr.io/pubpub/platform:${{ steps.timestamp.outputs.TIMESTAMP }}
                  docker push ghcr.io/pubpub/platform:latest

                  # Base
                  docker pull ${{ needs.build-all.outputs.base-image }}
                  docker tag ${{ needs.build-all.outputs.base-image }} ghcr.io/pubpub/platform-migrations:${{ steps.timestamp.outputs.TIMESTAMP }}
                  docker tag ${{ needs.build-all.outputs.base-image }} ghcr.io/pubpub/platform-migrations:latest
                  docker push ghcr.io/pubpub/platform-migrations:${{ steps.timestamp.outputs.TIMESTAMP }}
                  docker push ghcr.io/pubpub/platform-migrations:latest

                  # Jobs
                  docker pull ${{ needs.build-all.outputs.jobs-image }}
                  docker tag ${{ needs.build-all.outputs.jobs-image }} ghcr.io/pubpub/platform-jobs:${{ steps.timestamp.outputs.TIMESTAMP }}
                  docker tag ${{ needs.build-all.outputs.jobs-image }} ghcr.io/pubpub/platform-jobs:latest
                  docker push ghcr.io/pubpub/platform-jobs:${{ steps.timestamp.outputs.TIMESTAMP }}
                  docker push ghcr.io/pubpub/platform-jobs:latest
